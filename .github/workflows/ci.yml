name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 16.x
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --no-progress
      - name: Lint
        run: npm run lint

  release-frontend:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 16.x
    outputs:
      status: ${{ steps.release.outputs.status }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --no-progress
      - name: Release
        id: release
        run: |
          npx ts-node ./scripts/release.ts --project=frontend
          status=$(cat release-status-frontend)
          echo "status=${status}" >> $GITHUB_OUTPUT
          echo Status - ${status}

  deploy-frontend:
    needs: release-frontend
    if: ${{ needs.release-frontend.outputs.status == 'released' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 16.x
    defaults:
      run:
        working-directory: ./packages/frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Firebase tools
        run: npm i -g firebase-tools
      - name: Install dependencies
        run: npm ci --no-progress
      - name: Build
        run: npm run build
        env:
          REACT_APP_API: ${{ secrets.API }}
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          REACT_APP_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      - name: Deploy
        run: firebase deploy --token ${{ secrets.FIREBASE_TOKEN }}

  release-backend:
    needs:
      - lint
      - release-frontend # run after this job to avoid git conflicts
    if: ${{ always() && needs.lint.result == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 16.x
    outputs:
      status: ${{ steps.release.outputs.status }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --no-progress
      - name: Release
        id: release
        run: |
          npx ts-node ./scripts/release.ts --project=backend
          status=$(cat release-status-backend)
          echo "status=${status}" >> $GITHUB_OUTPUT
          echo Status - ${status}

  deploy-backend:
    needs: release-backend
    if: ${{ needs.release-backend.outputs.status == 'released' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 16.x
    defaults:
      run:
        working-directory: ./packages/backend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Railway CLI
        run: npm i -g @railway/cli
      - name: Install dependencies
        run: npm ci --no-progress
      - name: Build
        run: npm run build
        env:
          PORT: ${{ secrets.PORT }}
          FRONTEND_ORIGIN: ${{ secrets.FRONTEND_ORIGIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      - name: Deploy
        run: RAILWAY_TOKEN=${{ secrets.RAILWAY_TOKEN_PRODUCTION }} railway up
